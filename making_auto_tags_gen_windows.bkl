<?xml version="1.0" ?>
<!--
===========================================
DLL
===========================================
-->
<makefile>

          <requires version="0.2.9"/>

<!-- <set var="BUILDDIR">
        <if cond="TOOLSET=='win32'">build_$(COMPILER)</if>
        <if cond="TOOLSET!='win32'">.</if>
     </set> --> <!-- uncomment if you need to set separate build dir for each target.
                       also uncomment <dirname>$(id)</dirname> below -->

    <template id="dll_3_compiler">
        <warnings>max</warnings> <!-- no, default, max -->
        <so_version>1.0.3</so_version>
        <define> BUILD_DLL </define>
        <define> BUILDING_DLL </define>
        <define> _WINDLL </define>
        <libname>auto_tag_gen</libname>  <!-- must resemble your dll's name and dll id -->
        <dllname>auto_tag_gen</dllname>
        <install-to>$(LIBDIR)</install-to>

        <!-- <dirname>$(id)</dirname> -->

            <!-- Compiler Specific -->
            <if cond="FORMAT=='mingw'">
                    <cflags>-Wall -Wextra -pedantic -O -O2 -m32</cflags> <!-- compiler specific flags. Optimizartions, warning flags etc. -->
                    <!-- if you use TDM-GCC-64 or any other version of MINGWw64 add -m32 at the last,
                         this will generate 32-bit binary for 32-bit GVIM.
                         Otherwise don't take any action -->

                     <!-- <define>SOMEMACRO</define> -->
                     <!-- <include>../include/foo</include> -->
                     <!-- <include>C:\xtralibs\appu</include> -->
                     <!-- <headers>utils.h additionalheader.h</headers> -->
                     <!-- <ldflags>-s</ldflags> --> <!-- note: stripe bytes causes Avast antivirus to behave very badly -->
                     <!-- <ldflags>-mwindows</ldflags> -->
                     <sys-lib> user32 -lkernel32 -lshell32 -lgdi32 -lcomctl32 -lole32  -m32 </sys-lib>
                     <!-- if you use TDM-GCC-64 or any other version of MINGWw64 add -m32 at the last,
                         this will generate 32-bit binary for 32-bit GVIM.
                         Otherwise don't take any action -->

                     <!-- <sys-lib>png</sys-lib> -->
                     <!-- <sys-lib>z</sys-lib> -->
                     <!-- <lib-path>/usr/lib/mysql</lib-path> -->
                     <!-- note that hardcoding library paths like this is a bad
                           idea, it's done here only for the sake of simplicity;
                            in real bakefile, an <option> would be used -->
                     <!--<library>mylib</library> -->
            </if>

  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
            <if cond="FORMAT=='msvc'">
                     <!--    <include> "C:\xxxx\include\" </include> -->
                     <!--   <include> "C:\xx\yyy\zzzz\" </include> -->
                     <cflags> /TC /W4 </cflags> <!-- C -->
                     <!--    <cflags> /TP /W4 </cflags> --> <!-- C++ -->
                     <!-- <define>SOMEMACRO</define> -->
                     <!-- <include>../include/foo</include> -->
                     <!-- <include>C:\xtralibs\appu</include> -->
                     <!-- <headers>utils.h additionalheader.h</headers> -->
                     <!-- <ldflags>/SUBSYSTEM:CONSOLE</ldflags> -->
                     <!-- <ldflags>/SUBSYSTEM:WINDOWS</ldflags> -->
                     <sys-lib> user32.lib kernel32.lib shell32.lib gdi32.lib comctl32.lib ole32 </sys-lib>
                     <!-- <sys-lib>png</sys-lib> -->
                     <!-- <sys-lib>z</sys-lib> -->
                     <!-- <lib-path>/usr/lib/mysql</lib-path> -->
                     <!-- note that hardcoding library paths like this is a bad
                           idea, it's done here only for the sake of simplicity;
                            in real bakefile, an <option> would be used -->
                     <!-- embed manifest when building with msvc nmake -->
                                     <!-- use the name of your generated exe. look at exe id -->
                     <postlink-command> mt.exe -manifest $(id).dll.manifest -outputresource:$(id).dll;2 </postlink-command>
            </if>
  <!-- ~~~~~~~~ Compiler Specific definition Ends ~~~~~~~~~~ -->

  <!-- COMMON -->
    <!-- <win32-res> resource.rc </win32-res> -->
    <sources> cmdline_ctags.c </sources>
<!--	<include>C:\xtralibs\appu</include> -->

<!-- HERE OUR PROJECT ENDS -->
    </template>
<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

<!-- HERE OUR TARGET GOES -->
<!-- Targets cannot be specified by command-line switch by this method
      so comment/uncomment and modify suitably.
	  remember that you can use almost every tags here like above. -->

<dll id="auto_tag_gen" template="dll_3_compiler">  <!-- you dll's name, may vary from the source name, its on your choice -->
     <!-- IMPORTANT: if not required comment the next line containing <debug-info>  -->
     <!-- <debug-info>on</debug-info>  --> <!-- IMPORTANT: on/off  -->
     <if cond="FORMAT=='mingw'">
            <ldflags> -m32 -s</ldflags> <!-- uncomment when building release version  -->
            <!-- if you use TDM-GCC-64 or any other version of MINGWw64 add -m32 first,
                         this will generate 32-bit binary for 32-bit GVIM.
                         Otherwise don't take any action -->

     </if>
     <if cond="FORMAT=='msvc'">
             <postlink-command> del $(id).dll.manifest </postlink-command>
     </if>
</dll>

<!-- ==================================================================================================================== -->

<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
</makefile>
